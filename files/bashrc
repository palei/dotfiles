#!/bin/bash

# ~/.bashrc

#######################################
#            _                        #  
#   ___ ___ | | ___  _   _ _ __ ___   #
#  / __/ _ \| |/ _ \| | | | '__/ __|  #
# | (_| (_) | | (_) | |_| | |  \__ \  #
#  \___\___/|_|\___/ \__,_|_|  |___/  #
#                                     #
#######################################

txtblk='\e[0;30m' # Black - Regular
txtred='\e[0;31m' # Red
txtgrn='\e[0;32m' # Green
txtylw='\e[0;33m' # Yellow
txtblu='\e[0;34m' # Blue
txtpur='\e[0;35m' # Purple
txtcyn='\e[0;36m' # Cyan
txtwht='\e[0;37m' # White
bldblk='\e[1;30m' # Black - Bold
bldred='\e[1;31m' # Red
bldgrn='\e[1;32m' # Green
bldylw='\e[1;33m' # Yellow
bldblu='\e[1;34m' # Blue
bldpur='\e[1;35m' # Purple
bldcyn='\e[1;36m' # Cyan
bldwht='\e[1;37m' # White
unkblk='\e[4;30m' # Black - Underline
undred='\e[4;31m' # Red
undgrn='\e[4;32m' # Green
undylw='\e[4;33m' # Yellow
undblu='\e[4;34m' # Blue
undpur='\e[4;35m' # Purple
undcyn='\e[4;36m' # Cyan
undwht='\e[4;37m' # White
bakblk='\e[40m'   # Black - Background
bakred='\e[41m'   # Red
badgrn='\e[42m'   # Green
bakylw='\e[43m'   # Yellow
bakblu='\e[44m'   # Blue
bakpur='\e[45m'   # Purple
bakcyn='\e[46m'   # Cyan
bakwht='\e[47m'   # White
txtrst='\e[0m'    # Text Reset

##############################################
#                                  _         #
#  _ __  _ __ ___  _ __ ___  _ __ | |_ ___   #
# | '_ \| '__/ _ \| '_ ` _ \| '_ \| __/ __|  #
# | |_) | | | (_) | | | | | | |_) | |_\__ \  #
# | .__/|_|  \___/|_| |_| |_| .__/ \__|___/  #
# |_|                       |_|              #
#                                            #
##############################################

plainprompt()
{
  if [[ $VIRTUAL_ENV ]]; then
    venv="(\[$bldylw\]`basename $VIRTUAL_ENV`\[$txtrst\]) "
  else
    venv=''
  fi

  PS1="$venv\[$bldred\]\h\[$txtrst\] \w$(__git_ps1 " (\[$txtblu\]%s\[$txtrst\])") \[$bldylw\]\$\[$txtrst\] "
}

basicprompt() 
{
  PS1="\! \u@\h \w \$ "
}

blueprompt() 
{
  PS1="\! \[$txtblu\]\u\[$bldblu\]@\[$txtblu\]\h\[$txtrst\] \w \[$bldred\]\$\[$txtrst\] "
}

whiteprompt()
{
  PS1="\! \[$txtwht\]\u\[$bldgrn\]@\[$txtwht\]\h\[$txtrst\] \w \[$bldred\]\$\[$txtrst\] "
}

timeprompt()
{
  PS1="\t \[$txtblu\]\u\[$bldblu\]@\[$txtblu\]\h\[$txtrst\] \w \[$bldylw\]\$\[$txtrst\] "
}

blackprompt()
{
  PS1="\t \[$txtblk\]\u\[$bldred\]@\[$txtblk\]\h\[$txtrst\] \w \[$bldred\]\$\[$txtrst\] "
}

####################################
#        _ _                       #
#   __ _| (_) __ _ ___  ___  ___   # 
#  / _` | | |/ _` / __|/ _ \/ __|  #
# | (_| | | | (_| \__ \  __/\__ \  #
#  \__,_|_|_|\__,_|___/\___||___/  # 
#                                  # 
####################################

alias ..='cd ..'
alias c='clear'
alias h='history'
alias df='df -h'
alias top='htop'
alias ll="ls -l --group-directories-first"
alias ls='ls -hF --color'
alias la='ls -Al' 
alias lx='ls -lXB'
alias lk='ls -lSr'
alias lc='ls -ltcr'
alias lu='ls -ltur'
alias lt='ls -ltr'
alias lm='ls -al|less'
alias lr='ls -lR'
alias vf='cd'
alias more='less'
alias path='echo -e ${PATH//:/\\n}'
alias edit='vim'
alias wget='wget -c'
alias now='date +%T'
alias update='sudo apt-get update && sudo apt-get upgrade'

#################################################
#   __                  _   _                   #
#  / _|_   _ _ __   ___| |_(_) ___  _ __  ___   #
# | |_| | | | '_ \ / __| __| |/ _ \| '_ \/ __|  #
# |  _| |_| | | | | (__| |_| | (_) | | | \__ \  #
# |_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/  #
#                                               #
################################################# 

# print a horizontal line on the terminal
function hline {
  printf "%$(tput cols)s\n"|tr ' ' '-'
}

# disable caps lock
function nocaps {
  setxkbmap -option ctrl:nocaps
}

# get git branch
function parse_git_branch {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \[\1\]/'
}

# remove .pyc files recursively
function rmpyc {
  find -name "*.pyc" -delete
}

# extract almost anything
function extract {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xvjf $1     ;;
            *.tar.gz)    tar xvzf $1     ;;
            *.bz2)       bunzip2 $1      ;;
            *.rar)       unrar x $1      ;;
            *.gz)        gunzip $1       ;;
            *.tar)       tar xvf $1      ;;
            *.tbz2)      tar xvjf $1     ;;
            *.tgz)       tar xvzf $1     ;;
            *.zip)       unzip $1        ;;
            *.Z)         uncompress $1   ;;
            *.7z)        7z x $1         ;;
            *)           echo "'$1' cannot be extracted via >extract<" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

source ~/scripts/git-completion.sh
source ~/scripts/git-prompt.sh

source "/usr/local/bin/virtualenvwrapper.sh"

PROMPT_COMMAND=plainprompt
